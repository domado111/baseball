<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
 "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="ldg.mybatis.user">

	<!-- 유저 정보 -->
	<select id="getUser" parameterType="String" resultType="user">
		select * from users where id=#{id}
	</select>

	<!-- 정보 수정 -->
	<update id="updateInfo" parameterType="user">
		update users set nickname=#{nickname},email=#{email},win_count=#{win_count},lose_count=#{lose_count},point=#{point} where id=#{id}
	</update>
	
	<!-- 유저 삭제 -->
	<delete id="deleteUser" parameterType="user">
		delete from users where id=#{id}
	</delete>
	
	<!-- 유저 목록  -->
	<select id="getUsers" resultType="user">
		select * from users where grade=1 order by reg_date
	</select>
	
	<!-- 유저 목록  -->
	<select id="usersCount" resultType="int">
		select count(*) from users where grade=1
	</select>
	
	<!-- 유저 아이디 조회 -->
	<select id="selectUser" parameterType="String" resultType="int">
		select user_num from users where id=#{id}
	</select>

	<!-- 아이디 중복확인 -->
	<select id="checkId" parameterType="String" resultType="int">
		select nvl(count(*),0) from users where id=#{id}
	</select>
	
	<!-- 닉네임 중복확인 -->
	<select id="checkNick" parameterType="String" resultType="int">
		select nvl(count(*),0) from users where nickname=#{nickname}
	</select>
	
	<!-- 이메일 중복확인 -->
	<select id="checkEmail" parameterType="String" resultType="int">
		select nvl(count(*),0) from users where email=#{email}
	</select>

	<!-- 회원가입 -->
	<insert id="insertUser" parameterType="user">
		<selectKey keyProperty="user_num" resultType="int" order="BEFORE">
			select user_seq.nextval from dual
		</selectKey>
		insert into Users(user_num,grade,id,password,email,nickname,reg_date) values (#{user_num},#{grade},#{id},#{password},#{email},#{nickname},sysdate)
	</insert>
	
	<!-- 아이디 이메일 확인  -->
	<select id="findCheck" parameterType="map" resultType="int">
		select nvl(count(*),0) from users where nickname=#{nickname} and email=#{email} 
	</select>
	
	<!-- 아이디 이메일 확인  -->
	<select id="findID" parameterType="String" resultType="String">
		select id from users where email=#{email} 
	</select>
	
	<!-- 비밀번호 찾기  -->
	<select id="findPWD" parameterType="map" resultType="int">
		select nvl(count(*),0) from users where id=#{id} and email=#{email} 
	</select>
	
	<!-- 비밀번호 변경 -->
	<update id="updatePWD" parameterType="String">
		update users set password=#{password} where id=#{id}
	</update>
	
	<!-- 로그인 확인 -->
	<select id="loginCheck" parameterType="map" resultType="int">
		select
		count(*) from users where id=#{id} and
		password=#{password}
	</select>

	<!-- 온라인 -->
	<update id="online" parameterType="String">
		update users set status=1
		where id=#{id}
	</update>

	<!-- 오프라인 -->
	<update id="offline" parameterType="String">
		update users set status=0
		where id=#{id}
	</update>
	
	<!-- 게임 중 -->
	<update id="ongame" parameterType="String">
		update users set status=2
		where id=#{id}
	</update>
	
	<select id="getRank" resultType="user">
	<![CDATA[
		select * from (select * from (select * from users where grade!=0 order by win_count desc ) order by point desc) where rownum<=10
	]]>
	</select>
</mapper>